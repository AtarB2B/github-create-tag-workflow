name: Create Git Tag

description: Create Git Tag

inputs:
  DEPLOY_ENV:
    required: true
    description: Set Enviroment to deploy
  SSH_PRIV_KEY_LIBRARY:
    required: true
    description: SSH Private Key Library
  GITHUB_TOKEN:
    required: true
    description: token

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        ref: "main"

    - name: Find Latest Release Branch
      id: release-branch-finder
      uses: jsryudev/release-branch-finder@v0.1.0
      with:
        repo-token: ${{ inputs.GITHUB_TOKEN }}
        release-branch-prefix: rc

    - name: Set Vars
      run: |
        echo "CURRENT_DATE=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
        echo "BRANCH="${{ steps.release-branch-finder.outputs.release-branch }}"" >> $GITHUB_ENV
      shell: bash

    - name: GCloud Deploy
      run: echo ${ATAR_CREDENTIALS_DEV}|gcloud auth activate-service-account --key-file=-
      shell: bash
    
    - name: Deploy ${{github.event.repository.name}}
      run: ${RETRY} gcloud -q --project=${ATAR_PROJECT_DEV} app deploy app.${{ inputs.DEPLOY_ENV }}.yaml -v=newpipeline --no-promote
      shell: bash

    - name: Create TAR release
      run: atar-cli --tar -n=${{github.event.repository.name}}-${{ steps.release-branch-finder.outputs.release-branch }}
      shell: bash

    - name: Upload Release Asset
      run: ${RETRY} gh release upload ${{ steps.release-branch-finder.outputs.release-branch }} ${{github.event.repository.name}}-${{ steps.release-branch-finder.outputs.release-branch }}.tar.gz
      shell: bash

    - name: Create GH Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "${{ steps.release-branch-finder.outputs.release-branch }}"
        release_name: Release "${{ steps.release-branch-finder.outputs.release-branch }}"
        commitish: ${{env.BRANCH}}
        body: |
          Changes in this Release
          - Release from: ${{env.BRANCH}}
          - Release date: ${{env.CURRENT_DATE}}
          - Commit: ${{github.sha}}
        draft: false
        prerelease: true

    - name: Create PR to main
      run: gh pr create --base=main --head=${{ steps.release-branch-finder.outputs.release-branch }}" --title="[Release] version ${{ steps.release-branch-finder.outputs.release-branch }} to production" --body="Pull Request ${{ steps.release-branch-finder.outputs.release-branch }} to Production"
      shell: bash