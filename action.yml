name: Create Git Tag

description: Create Git Tag

inputs:
  DEPLOY_ENV:
    required: true
    description: Set Enviroment to deploy
  GITHUB_TOKEN:
    required: true
    description: Github Token
  SVC_NAME:
    required: true
    description: Service Name
  CREATE_RELEASE:
    required: true
    description: Create Release and Tag - Github
  CLIENT:
    required: true
    description: Clients

runs:
  using: "composite"
  steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Find Latest Release Branch
      id: release-branch-finder
      uses: jsryudev/release-branch-finder@v0.1.0
      with:
        repo-token: ${{ inputs.GITHUB_TOKEN }}
        release-branch-prefix: rc

    - name: Check Credentials and Project
      id: project_credential
      run: |
        if [[ (${{ inputs.DEPLOY_ENV }} == 'dev') ]]
        then
            echo '::set-output name=PROJECT::$ATAR_PROJECT_DEV'
            echo '::set-output name=CREDENTIALS::$ATAR_CREDENTIALS_DEV'
        else
            echo '::set-output name=PROJECT::$ATAR_PROJECT'
            echo '::set-output name=CREDENTIALS::$ATAR_CREDENTIALS'
        fi
      shell: bash

    - name: Set Vars
      run: |
        echo "CURRENT_DATE=$(date +'%Y-%m-%d %H:%M')" >> $GITHUB_ENV
        echo "BRANCH="$(echo ${{ steps.release-branch-finder.outputs.release-branch }} | cut -c 4-)"" >> $GITHUB_ENV
      shell: bash

    - name: GAE Key
      run: |
        echo ${{steps.project_credential.outputs.CREDENTIALS}}|gcloud auth activate-service-account --key-file=-
      shell: bash

    - name: Build FRONTEND
      run: |
        if [[ (${{ inputs.DEPLOY_ENV }} == 'dev') ]]
        then
            cd erp; rm -rf node_modules dist; sudo npm install; npm run build-staging
        elif [[ (${{ inputs.DEPLOY_ENV }} == 'prod-atar') ]]
        then
            cd erp; rm -rf node_modules dist; sudo npm install; npm run build
        elif [[ (${{ inputs.DEPLOY_ENV }} == 'prod-porto') ]]
        then
            cd erp; rm -rf node_modules dist; sudo npm install; npm run build-porto
        fi
        
      shell: bash

    - name: Check Promote and GAE Deploy ${{github.event.repository.name}}
      run: |
        if [[ (${{ inputs.DEPLOY_ENV }} == 'dev') ]]
        then
            OLD_TAG=${{env.BRANCH}} 
            TAG="${OLD_TAG//./-}"
            cd erp
            ${RETRY} gcloud -q --project=${{steps.project_credential.outputs.PROJECT}} app deploy app.porto-hml.yaml -v=$TAG --no-promote
            ${RETRY} gcloud -q --project=${{steps.project_credential.outputs.PROJECT}} app deploy app.atar-hml.yaml -v=$TAG --no-promote

        elif [[ (${{ inputs.DEPLOY_ENV }} == 'prod-atar') ]]
        then
            OLD_TAG=${{env.BRANCH}} 
            TAG="${OLD_TAG//./-}"
            cd erp
            ${RETRY} gcloud -q --project=${{steps.project_credential.outputs.PROJECT}} app deploy app.yaml -v=$TAG --promote
        
        elif [[ (${{ inputs.DEPLOY_ENV }} == 'prod-porto') ]]
        then
            OLD_TAG=${{env.BRANCH}} 
            TAG="${OLD_TAG//./-}"
            cd erp
            ${RETRY} gcloud -q --project=${{steps.project_credential.outputs.PROJECT}} app deploy app.porto.yaml -v=$TAG --promote
        fi
      shell: bash

    - name: Create TAR release
      if: ${{ inputs.CREATE_RELEASE == 'true' }}
      run: |
        atar-cli --tar -n=${{github.event.repository.name}}-${{env.BRANCH}}
      shell: bash

    - name: Create GH Release
      if: ${{ inputs.CREATE_RELEASE == 'true' }}
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{env.BRANCH}}
        release_name: Release "${{env.BRANCH}}
        commitish: ${{ steps.release-branch-finder.outputs.release-branch }}
        body: |
          Changes in this Release
          - Release from: ${{ steps.release-branch-finder.outputs.release-branch }}
          - Release date: ${{env.CURRENT_DATE}}
          - Commit: ${{github.sha}}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ inputs.CREATE_RELEASE == 'true' }}
      run: |
        chown -R $(id -u):$(id -g) $PWD
        ${RETRY} gh release upload ${{env.BRANCH}} ${{github.event.repository.name}}-${{env.BRANCH}}.tar.gz
      shell: bash

    - name: Create PR to main
      if: ${{ inputs.CREATE_RELEASE == 'true' }}
      run: gh pr create --base=main --head=${{ steps.release-branch-finder.outputs.release-branch }} --title="[Release] version ${{ steps.release-branch-finder.outputs.release-branch }} to production" --body="Pull Request ${{ steps.release-branch-finder.outputs.release-branch }} to Production"
      shell: bash